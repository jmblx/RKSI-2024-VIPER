services:
  db:
    image: postgres:15
    container_name: db_app
    command: -p 5432
    expose:
      - 5432
    restart: always
    env_file:
      - api/.env-prod
    networks:
      - custom
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis_auth
    command: ["redis-server", "--port", "6379", "--save", "60", "1", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    expose:
      - 6379
    networks:
      - custom
    volumes:
      - redis-data:/data


  fastapi_app:
    env_file:
      - api/.env-prod
    build:
      context: api
      dockerfile: Dockerfile.webapi
    command: ["/fastapi_app/docker/app.sh"]
    expose:
      - 8000
    networks:
      - custom
    depends_on:
      - db

  nginx:
    image: nginx:latest
    container_name: nginx_app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./app/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./nginx-logs:/var/log/nginx
      - ./certbot/www:/var/www/certbot:rw
      - ./static:/usr/share/nginx/html
    depends_on:
      - fastapi_app
      - db
      - redis
      - certbot
    networks:
      - custom

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot:rw
      - ./certbot/conf:/etc/letsencrypt:rw
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $!; done'
    networks:
      - custom

  investments_service:
    env_file:
      - investments_src/.env-prod
    build:
      context: ./investments_src
      dockerfile: Dockerfile
    container_name: investments_service
    networks:
      - custom
    command: ["/bin/sh", "-c", "while true; do make collect-data; sleep 3600; done"]

networks:
  custom:
    driver: bridge

volumes:
  db-data:
  redis-data:
